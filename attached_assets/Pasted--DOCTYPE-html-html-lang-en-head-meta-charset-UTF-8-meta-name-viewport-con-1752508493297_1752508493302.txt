<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dho Roho Translator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .card {
            background-color: white;
            border-radius: 1.5rem;
            padding: 2rem;
            box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
            transition: all 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
        }
        .btn-translate {
            transition: all 0.3s ease;
        }
        .btn-translate:hover {
            transform: scale(1.05);
        }
        #output {
            min-height: 100px;
        }
        #copyBtn {
            transition: color 0.2s ease-in-out;
        }
        /* Style for the toggle switch */
        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }
        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
            border-radius: 34px;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
            border-radius: 50%;
        }
        input:checked + .slider {
            background-color: #E53935; /* red 600 */
        }
        input:focus + .slider {
            box-shadow: 0 0 1px #E53935;
        }
        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">
    <div class="w-full max-w-2xl">
        <img src="https://i.imgur.com/8ToqmB8.png" alt="Ruwe Holy Ghost Church Logo" class="mx-auto mb-4 rounded-full shadow-lg">
        <div class="card">
            <!-- Header Section -->
            <div class="text-center mb-8">
                <h1 class="text-4xl font-bold text-gray-800">Dho Roho Translator</h1>
                <p class="text-gray-500 mt-2">Translate your text between Luo and Dho Roho.</p>
            </div>

            <!-- Translation Direction Toggle -->
            <div class="flex items-center justify-center mb-6 space-x-4">
                <span id="sourceLangLabel" class="text-gray-700 font-medium">Luo</span>
                <label class="toggle-switch">
                    <input type="checkbox" id="translationDirectionToggle" title="Toggle translation direction" aria-label="Toggle translation direction">
                    <span class="slider"></span>
                </label>
                <span id="targetLangLabel" class="text-gray-700 font-medium">Dho Roho</span>
            </div>

            <!-- Input and Output Section -->
            <div class="space-y-6">
                <!-- Input -->
                <div>
                    <label for="inputText" id="inputTextLabel" class="block text-sm font-medium text-gray-700 mb-2">Enter Text (Luo)</label>
                    <textarea id="inputText" rows="4" class="w-full p-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-red-500 transition" placeholder="Type or paste your text here... e.g., Japuonj or Nying"></textarea>
                </div>

                <!-- Action Button -->
                <div class="text-center">
                    <button id="translateBtn" class="btn-translate bg-red-600 text-white font-bold py-3 px-8 rounded-xl hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                        Translate
                    </button>
                </div>

                <!-- Output -->
                <div>
                    <label for="outputText" id="outputTextLabel" class="block text-sm font-medium text-gray-700 mb-2">Translation (Dho Roho)</label>
                    <div class="relative">
                        <div id="output" class="w-full p-4 pr-12 bg-gray-50 border border-gray-200 rounded-xl whitespace-pre-wrap">
                            <p id="outputText" class="text-gray-800 font-semibold text-lg"></p>
                        </div>
                        <span id="copyFeedback" class="absolute top-1/2 right-12 -translate-y-1/2 text-sm text-red-600 bg-red-100 px-2 py-1 rounded-md hidden transition-opacity duration-300">Copied!</span>
                        <button id="copyBtn" class="absolute top-1/2 right-4 -translate-y-1/2 text-gray-400 hover:text-red-600 focus:outline-none" title="Copy to clipboard">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                                <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
             <!-- Footer with link to rules -->
            <div class="text-center mt-8">
                <a href="#" id="rules-toggle" class="text-red-600 hover:text-red-800 text-sm">Show/Hide Translation Rules</a>
            </div>
            <div id="rules-container" class="hidden mt-4 p-4 bg-gray-50 rounded-lg border">
                 <h3 class="text-lg font-semibold mb-2">Translation Logic</h3>
                 <p class="text-sm text-gray-600">The translation is based on a set of rules derived from  "Dho Roho - Alphabetical Letters". Taking example of vowels: A ➟ O, E ➟ U, I ➟ E, O ➟ I, U ➟ A.</p>
            </div>

            <!-- Copywrite -->
            <div id="rules-container" class="mt-4 p-4 bg-gray-50 rounded-lg border">
                 <h4 class="text-lg font-semibold mb-2 flex items-center justify-center">Copyright © 2020 - 2025. All Rights Reserved.</h4>
                 <p class="text-center">Developed with ❤️ by <a href="https://wa.me/+254708581688" target="_blank" rel="noopener noreferrer"><u style="text-decoration: #f00 wavy underline;">Lawi</u> Otieno.</a></p>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // The translation map is created from the rules in the Dho_Roho.docx file.
            // It includes special combinations, consonant-vowel pairs, standalone consonant clusters, and single letters.
            const translationMap = {
                // Part 4: Special Combinations (3 letters, highest priority)
                "CHA": "DHO", "CHE": "DHU", "CHI": "DHE", "CHO": "DHI", "CHU": "DHA",
                "NDA": "MO", "NDE": "MU", "NDI": "ME", "NDO": "MI", "NDU": "MA",
                "NGA": "FO", "NGE": "FU", "NGI": "FE", "NGO": "FI", "NGU": "FA",
                "NG'A": "GO", "NG'E": "GU", "NG'I": "GE", "NG'O": "GI", "NG'U": "GA",
                "THA": "KO", "THE": "KU", "THI": "KE", "THO": "KI", "THU": "KA",
                "NJA": "WO", "NJE": "WU", "NJI": "WE", "NJO": "WI", "NJU": "WA",
                "DHA": "DO", "DHE": "DU", "DHI": "DE", "DHO": "DI", "DHU": "DA",
                "MBA": "YO", "MBE": "YU", "MBI": "YE", "MBO": "YI", "MBU": "YA",
                "NYA": "JO", "NYE": "JU", "NYI": "JE", "NYO": "JI", "NYU": "JA",

                // Part 3: Consonants Combinations (2 letters)
                "BA": "PO", "BE": "PU", "BI": "PE", "BO": "PI", "BU": "PA",
                "DA": "THO", "DE": "THU", "DI": "THE", "DO": "THI", "DU": "THA",
                "FA": "NO", "FE": "NU", "FI": "NE", "FO": "NI", "FU": "NA",
                "GA": "TO", "GE": "TU", "GI": "TE", "GO": "TI", "GU": "TA",
                "HA": "NZO", "HE": "NZU", "HI": "NZE", "HO": "NZI", "HU": "NZA",
                "JA": "WO", "JE": "WU", "JI": "WE", "JO": "WI", "JU": "WA",
                "KA": "CHO", "KE": "CHU", "KI": "CHE", "KO": "CHI", "KU": "CHA",
                "LA": "RO", "LE": "RU", "LI": "RE", "LO": "RI", "LU": "RA",
                "MA": "SO", "ME": "SU", "MI": "SE", "MO": "SI", "MU": "SA",
                "NA": "NDO", "NE": "NDU", "NI": "NDE", "NO": "NDI", "NU": "NDA",
                "PA": "BO", "PE": "BU", "PI": "BE", "PO": "BI", "PU": "BA",
                "RA": "MPO", "RE": "MPU", "RI": "MPE", "RO": "MPI", "RU": "MPA",
                "SA": "NG'O", "SE": "NG'U", "SI": "NG'E", "SO": "NG'I", "SU": "NG'A",
                "TA": "VO", "TE": "VU", "TI": "VE", "TO": "VI", "TU": "VA",
                "VA": "TO", "VE": "TU", "VI": "TE", "VO": "TI", "VU": "TA",
                "WA": "NJO", "WE": "NJU", "WI": "NJE", "WO": "NJI", "WU": "NJA",
                "YA": "SHO", "YE": "SHU", "YI": "SHE", "YO": "SHI", "YU": "SHA",
                "ZA": "HO", "ZE": "HU", "ZI": "HE", "ZO": "HI", "ZU": "HA",
                
                // CORRECTED: Standalone Consonant Clusters (2-3 letters)
                "NG'": "G", "CH": "DH", "DH": "D", "MB": "Y", "ND": "M",
                "NG": "F", "NJ": "W", "NY": "J", "TH": "K",

                // Part 1 & 2: Alphabetical Letters (1 letter, lowest priority)
                "A": "O", "B": "P", "D": "TH", "E": "U", "F": "N", "G": "T", "H": "NZ",
                "I": "E", "J": "W", "K": "CH", "L": "R", "M": "S", "N": "ND", "O": "I",
                "P": "B", "R": "MP", "S": "NG'", "T": "V", "U": "A", "V": "T", "W": "NJ",
                "Y": "SH", "Z": "H",
            };

            // Create the reverse translation map
            const reverseTranslationMap = {};
            // To handle potential overlaps and prioritize longer original Luo keys for reversal,
            // we first build a temporary map where Dho Roho values are keys and Luo keys are values.
            // If multiple Luo keys map to the same Dho Roho value, we keep the longest Luo key.
            const tempReverseMap = {};
            for (const luoKey in translationMap) {
                const dhoRohoValue = translationMap[luoKey];
                if (!tempReverseMap[dhoRohoValue] || luoKey.length > tempReverseMap[dhoRohoValue].length) {
                    tempReverseMap[dhoRohoValue] = luoKey;
                }
            }

            // Populate the final reverseTranslationMap from the temporary map
            for (const dhoRohoKey in tempReverseMap) {
                reverseTranslationMap[dhoRohoKey] = tempReverseMap[dhoRohoKey];
            }

            const sortedKeys = Object.keys(translationMap).sort((a, b) => b.length - a.length);
            const sortedReverseKeys = Object.keys(reverseTranslationMap).sort((a, b) => b.length - a.length);

            // Get UI elements
            const translateBtn = document.getElementById('translateBtn');
            const inputText = document.getElementById('inputText');
            const outputText = document.getElementById('outputText');
            const rulesToggle = document.getElementById('rules-toggle');
            const rulesContainer = document.getElementById('rules-container');
            const copyBtn = document.getElementById('copyBtn');
            const copyFeedback = document.getElementById('copyFeedback');
            const translationDirectionToggle = document.getElementById('translationDirectionToggle');
            const inputTextLabel = document.getElementById('inputTextLabel');
            const outputTextLabel = document.getElementById('outputTextLabel');
            const sourceLangLabel = document.getElementById('sourceLangLabel');
            const targetLangLabel = document.getElementById('targetLangLabel');

            // State to keep track of translation direction (true for Luo -> Dho Roho, false for Dho Roho -> Luo)
            let isLuoToDhoRoho = true;

            /**
             * Translates text from Luo to Dho Roho, preserving newlines.
             * @param {string} text - The input text to translate.
             * @returns {string} The translated text, with line breaks preserved.
             */
            function translateToDhoRoho(text) {
                const lines = text.split('\n');
                const translatedLines = lines.map(line => {
                    const words = line.split(' ');
                    const translatedWords = words.map(word => {
                        let remainingWord = word.toUpperCase();
                        let translatedWord = '';
                        while (remainingWord.length > 0) {
                            let matchFound = false;
                            for (const key of sortedKeys) {
                                if (remainingWord.startsWith(key)) {
                                    translatedWord += translationMap[key];
                                    remainingWord = remainingWord.substring(key.length);
                                    matchFound = true;
                                    break;
                                }
                            }
                            if (!matchFound) {
                                translatedWord += remainingWord.charAt(0);
                                remainingWord = remainingWord.substring(1);
                            }
                        }
                        return translatedWord;
                    });
                    return translatedWords.join(' ');
                });
                // Capitalize the first letter of each word and handle apostrophes
                let formattedTranslation = translatedLines.join('\n').toLowerCase().replace(/\b\w/g, l => l.toUpperCase());
                formattedTranslation = formattedTranslation.replace(/'(\w)/g, (match, p1) => `'${p1.toLowerCase()}`);
                return formattedTranslation;
            }

            /**
             * Translates text from Dho Roho to Luo, preserving newlines.
             * @param {string} text - The input text to translate.
             * @returns {string} The translated text, with line breaks preserved.
             */
            function translateToLuo(text) {
                const lines = text.split('\n');
                const translatedLines = lines.map(line => {
                    const words = line.split(' ');
                    const translatedWords = words.map(word => {
                        let remainingWord = word.toUpperCase();
                        let translatedWord = '';
                        while (remainingWord.length > 0) {
                            let matchFound = false;
                            for (const key of sortedReverseKeys) {
                                if (remainingWord.startsWith(key)) {
                                    translatedWord += reverseTranslationMap[key];
                                    remainingWord = remainingWord.substring(key.length);
                                    matchFound = true;
                                    break;
                                }
                            }
                            if (!matchFound) {
                                translatedWord += remainingWord.charAt(0);
                                remainingWord = remainingWord.substring(1);
                            }
                        }
                        return translatedWord;
                    });
                    return translatedWords.join(' ');
                });
                // Capitalize the first letter of each word for Luo output
                return translatedLines.join('\n').toLowerCase().replace(/\b\w/g, l => l.toUpperCase());
            }

            // Event listener for the translate button
            translateBtn.addEventListener('click', () => {
                const text = inputText.value;
                if (text.trim() === '') {
                    outputText.textContent = '';
                    return;
                }
                let translationResult;
                if (isLuoToDhoRoho) {
                    translationResult = translateToDhoRoho(text);
                } else {
                    translationResult = translateToLuo(text);
                }
                outputText.textContent = translationResult;
            });

            // Event listener for the translation direction toggle
            translationDirectionToggle.addEventListener('change', () => {
                isLuoToDhoRoho = !translationDirectionToggle.checked; // If checked, it's Dho Roho to Luo
                
                // Update labels
                if (isLuoToDhoRoho) {
                    inputTextLabel.textContent = 'Enter Text (Luo)';
                    outputTextLabel.textContent = 'Translation (Dho Roho)';
                    sourceLangLabel.textContent = 'Luo';
                    targetLangLabel.textContent = 'Dho Roho';
                    inputText.placeholder = 'Type or paste your text here... e.g., Nyasaye or Yesu or Japuonj';
                } else {
                    inputTextLabel.textContent = 'Enter Text (Dho Roho)';
                    outputTextLabel.textContent = 'Translation (Luo)';
                    sourceLangLabel.textContent = 'Dho Roho';
                    targetLangLabel.textContent = 'Luo';
                    inputText.placeholder = 'Type or paste your Dho Roho text here... e.g., Jong\'oshu or Shung\'a or Wobaiw';
                }
                // Clear input and output fields on direction change
                inputText.value = '';
                outputText.textContent = '';
            });


            // Event listener for the copy button
            copyBtn.addEventListener('click', () => {
                const textToCopy = outputText.textContent;
                if (!textToCopy) return;

                // Create a temporary textarea to perform the copy command
                const tempTextArea = document.createElement('textarea');
                tempTextArea.value = textToCopy;
                document.body.appendChild(tempTextArea);
                tempTextArea.select();
                
                try {
                    document.execCommand('copy');
                    // Show feedback message
                    copyFeedback.classList.remove('hidden');
                    setTimeout(() => {
                        copyFeedback.classList.add('hidden');
                    }, 2000); // Hide after 2 seconds
                } catch (err) {
                    console.error('Failed to copy text: ', err);
                    // You could add a user-facing error message here
                }
                
                document.body.removeChild(tempTextArea);
            });

            // Event listener for the rules toggle
            rulesToggle.addEventListener('click', (e) => {
                e.preventDefault();
                rulesContainer.classList.toggle('hidden');
            });
        });
    </script>
</body>
</html>
